USE GRAPH ldbc_snb

/*
  Query Name: bi1

  Description:
  Given a $date, find all messages created before that moment. The results are grouped in a 3-level hierarchy:
  1. By year of creation
  2. By Message type (Comment or not)
  3. By content length:
     - 0: 0 ≤ length < 40 (short)
     - 1: 40 ≤ length < 80 (one-liner)
     - 2: 80 ≤ length < 160 (tweet)
     - 3: 160 ≤ length (long)
  For each group, calculate message count, average message length, sum of message length, and the percentage of messages in each group.

  Reference:
  LDBC SNB Specification, page 90: https://ldbcouncil.org/ldbc_snb_docs/ldbc-snb-specification.pdf
*/

CREATE OR REPLACE QUERY bi1(DATETIME date) syntax v3{

  TYPEDEF TUPLE <INT year, BOOL isComment, INT lengthCategory, INT messageCount,
    FLOAT averageMessageLength, INT sumMessageLength, FLOAT percentageOfMessages> RESULT;

  HeapAccum<RESULT>(0, year DESC, isComment ASC, lengthCategory ASC) @@result;
  GroupByAccum<INT year, BOOL isComment, INT lengthCategory,
    SumAccum<INT> messageCount, SumAccum<INT> sumMessageLength> @@midResult;

  OrAccum @isComment;
  SumAccum<INT> @lengthCategory;

  UINT total;

  messages =SELECT m FROM (m:Comment:Post) WHERE m.creationDate < date;
  total = messages.size();
  messages =
    SELECT m
    FROM (m:Comment:Post)
    WHERE m.creationDate < date AND m.length>0 # or m.content != "\"\""
    ACCUM
      m.@isComment = (m.type == "Comment"),
      IF m.length < 40 THEN
        m.@lengthCategory = 0
      ELSE IF m.length < 80 THEN
        m.@lengthCategory = 1
      ELSE IF m.length < 160 THEN
        m.@lengthCategory = 2
      ELSE
        m.@lengthCategory = 3
      END
    POST-ACCUM @@midResult += (year(m.creationDate), m.@isComment, m.@lengthCategory -> 1, m.length);

  @@result.resize(@@midResult.size());
  FOREACH m IN @@midResult DO
    @@result += RESULT(m.year, m.isComment, m.lengthCategory, m.messageCount,
      (m.sumMessageLength * 1.0 / m.messageCount), m.sumMessageLength, (m.messageCount * 1.0 / total));
  END;

  PRINT @@result;
}

install query bi1

run query bi1("2012-02-07T12:12:27.096+00:00")
