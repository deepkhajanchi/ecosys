USE GRAPH ldbc_snb

/*
  Query Name: bi5

  Description:
  - For a given Tag ($tag), find all Messages (Post or Comment) directly tagged with it.
  - For each Person who created such a Message, compute:
      * messageCount: number of such Messages created
      * likeCount: number of likes received on these Messages
      * replyCount: number of Comments replying to these Messages
      * score: 1 × messageCount + 2 × replyCount + 10 × likeCount

  Reference:
  LDBC SNB Specification, Page 94: https://ldbcouncil.org/ldbc_snb_docs/ldbc-snb-specification.pdf
*/

CREATE OR REPLACE QUERY bi5(STRING tag) syntax v3{

  TYPEDEF TUPLE <UINT personId, UINT replyCount, UINT likeCount, UINT messageCount, UINT score> RESULT;

  HeapAccum<RESULT>(100, score DESC, personId ASC) @@result;

  SumAccum<UINT> @likeCount;
  SumAccum<UINT> @messageCount;
  SumAccum<UINT> @replyCount;

  tagWithName = SELECT t FROM (t:Tag {name:tag});

  messages = SELECT m FROM (:tagWithName) <-[:HAS_TAG]- (m:Comment:Post); # tagWithName -(<HAS_TAG)- (Comment|Post):m;

  tmp = SELECT m FROM (m:messages) <-[:LIKES]- (p:Person) ACCUM m.@likeCount += 1;
  tmp = SELECT m FROM (m:messages) <-[:REPLY_OF]- (c:Comment) ACCUM m.@replyCount += 1;
  tmp =
    SELECT p
    FROM (m:messages) -[:HAS_CREATOR]-> (p:Person)
    ACCUM
      p.@replyCount += m.@replyCount,
      p.@likeCount += m.@likeCount,
      p.@messageCount += 1
    POST-ACCUM
      @@result += RESULT(p.id, p.@replyCount, p.@likeCount, p.@messageCount,
        p.@messageCount + 2*p.@replyCount + 10*p.@likeCount);

  PRINT @@result;
}

install query bi5

run query bi5("Francis_of_Assisi")
