USE GRAPH ldbc_snb

/*
  Query Name: bi8

  Description:
  This query computes a score for each Person based on their interest in a given tag ($tag) and their activity related to messages with this tag.
  Additionally, it sums the scores of a Person's friends.

  Score Calculation:
  1. Interest: If a Person is interested in the $tag, +100 points.
  2. Activity: If a Person created a message (Post or Comment) with the $tag after the specified $startDate, +1 point per message.
  3. Friends' Scores: The sum of scores from a Personâ€™s friends is added to their total score.

  Total Score = Person's score + Friends' total score.

  Reference:
  LDBC SNB Specification, Page 97: https://ldbcouncil.org/ldbc_snb_docs/ldbc-snb-specification.pdf
*/

CREATE OR REPLACE QUERY bi8(STRING tag, DATETIME date) syntax v3 {

  TYPEDEF TUPLE <UINT personId, UINT score, UINT friendsScore, UINT totalScore> RESULT;
  HeapAccum<RESULT>(100, totalScore DESC, personId ASC) @@result;

  SumAccum<UINT> @score;
  SumAccum<UINT> @friendsScore;

  tagWithName = SELECT t FROM (t:Tag {name:tag});

  personsWithInterest =
    SELECT p
    FROM (:tagWithName) <-[:HAS_INTEREST]- (p:Person)
    ACCUM p.@score += 100;

  personsWithMessages =
    SELECT p
    FROM (:tagWithName) <-[:HAS_TAG]- (m:Comment:Post) -[:HAS_CREATOR]-> (p:Person)
    WHERE m.creationDate > date
    ACCUM p.@score += 1;

  personsWithScore = personsWithInterest UNION personsWithMessages;

  personsWithScore =
    SELECT p
    FROM (p:personsWithScore) -[:KNOWS]- (f:Person)
    ACCUM p.@friendsScore += f.@score
    POST-ACCUM @@result += RESULT(p.id, p.@score, p.@friendsScore, p.@score + p.@friendsScore);

  PRINT @@result;
}

install query bi8

run query bi8("Puerto_Rico", "2010-11-15")
