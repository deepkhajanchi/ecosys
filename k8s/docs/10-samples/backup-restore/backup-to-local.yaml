apiVersion: graphdb.tigergraph.com/v1alpha1
kind: TigerGraphBackup
metadata:
  name: test-cluster-backup-local
spec:
  # Specify which cluster to backup in the SAME NAMESPACE as the backup job
  clusterName: test-cluster
  # Specify where to store the backup data
  destination:
    storage: local
    # Use this field if type is local
    local:
      path: /home/tigergraph/tigergraph/data/backup
  
  # Configure the name of backup files and the path storing temporary files
  backupConfig:
    # Optional: Set the tag of the backup, if not set, the tag will be the name of this CR
    # Note: this field is Required for TigerGraph Operator < v1.1.0
    tag: local
    # Optional: Set the path for temporary staging files
    stagingPath: /home/tigergraph/tigergraph/data
    # Optional: If 'incremental' is set to true, incremental backup will be performed
    incremental: false
    # Optional: Set the timeout value for the backup process (default is 18000 seconds)
    timeout: 18000
    # Optional: Specify the number of processes to use for compression (0 uses the number of CPU cores)
    compressProcessNumber: 0
    # Optional: (Requires TigerGraph Operator >= v0.0.9 and TigerGraph >= v3.9.3)
    # Choose the compression level for the backup: DefaultCompression/BestSpeed/BestCompression
    compressLevel: DefaultCompression # Choose from DefaultCompression/BestSpeed/BestCompression
  
  # Optional: Set the policy for cleaning up backup package when deleting the backup CR
  # Choose from Delete/Retain
  # The default behavior is to retain the backup package.
  # If you want to delete the backup package when deleting the backup CR, 
  # you can set the cleanPolicy to Delete. 
  # With Delete policy, 
  # TigerGraph Operator will create a backup-clean-job when the backup CR is deleted, 
  # to make sure that the backup package is removed before deleting the backup CR.
  cleanPolicy: Delete

  # Optional: Set the retry policy for backup CR
  backoffRetryPolicy:
    # set maxRetryTimes for backup CR
    maxRetryTimes: 3
    # set the min duration between two retries, 
    # the format is like "5s","10m","1h","1h20m5s"
    minRetryDuration: 5s
    # set the max duration between two retries, 
    # the format is like "5s","10m","1h","1h20m5s"
    maxRetryDuration: 10s
    # If the value is true, the deletion of backup CR won't be blocked by failed backup-clean-job
    # that means, when backup-clean-job exceeds the maxRetryTimes
    # the backup CR will be deleted directly, the backup package still exists in cluster
    forceDeleteAfterMaxRetries: false